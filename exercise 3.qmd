---
title: "exercise 3 - functions"
format: 
   html:
     embed-resources: true
editor: visual
---

## exercise 3 - 2

### explore

```{r}
#| label: ex3_2

a = c(1:5,6:1)

n <- length(a)
#browser()
a[-c(n-1,n)] 
a[-c(1,n)] 
a[-c(1,2)]

a[-c(n-1,n)] + a[-c(1,n)] + a[-c(1,2)]

(a[-c(n-1,n)] + a[-c(1,n)] + a[-c(1,2)])/3


tmpFn <- function(a){
  n = length(a)
  mva= (a[-c(n-1,n)] + a[-c(1,n)] + a[-c(1,2)])/3
  return(mva)
}

tmpFn(a)

```

## exercise 3 - 4

```{r}
#| label: Prob3-4


A <- matrix(c(1,1,3,5,2,6,-2,-1, -3), nrow = 3, byrow = T)

A

A%%2

A%%2 == 1

A[A%%2 == 1]

bb <- 2*A[A%%2 == 1]

A[A%%2 == 1] <- 2*A[A%%2 == 1]

A

is.matrix(A)


tmpFn <- function(mat){
  if(!is.matrix(mat)) stop("Input is not a matrix")
  mat[mat%%2 == 1] <- 2*mat[mat%%2 == 1]
  return(mat)
}

A <- matrix(c(1,1,3,5,2,6,-2,-1, -3), nrow = 3, byrow = T)

tmpFn(A)

# B=c(1,1,1)
# 
# tmpFn(B)

```

#################### exercise 3-8

```{r}
#| label: ex3-8


testloop <- function(n){
  if(n<4)stop("n must be an integer > 3")
  browser()
  x = rep(NA, n-1)
  x[1] = 1
  x[2] = 2
  
  for(j in 3:(n-1)){x[j] = x[j-1] + 2/x[j-1]
  }
  return(x)
}

testloop(5)

# testloop(3)

```
